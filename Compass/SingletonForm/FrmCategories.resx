<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="CategoryId.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="ParentId.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="CategoryName.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="CategoryDesc.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Model.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="SubType.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="ModelPath.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="contextMenuStrip.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pbModelImage.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        ANs0SfI/BV84cZrj4CoAAAAASUVORK5CYII=
</value>
  </data>
</root>